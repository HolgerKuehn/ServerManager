// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Style", "IDE0059:Unnötige Zuweisung eines Werts.", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.ProgramMain.Main")]
[assembly: SuppressMessage("Style", "IDE0090:\"new(...)\" verwenden", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.ProgramMain.Main")]
[assembly: SuppressMessage("Performance", "CA1822:Member als statisch markieren", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.Backup.Backup")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "namespace", Target = "~N:blog.dachs.ServerManager")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.Database.ExecuteCommand(System.String)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressReferenceType")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressVersion")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressObject")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressType")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.NewIpAddressCollection(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressType)~blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.NewIpAddressCollection(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressVersion)~blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.NewIpAddressCollection(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressType,blog.dachDynDnsIpAddressType}")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.Add(blog.dachs.ServerManager.DynDNS.DynDnsIpAddress)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.Add(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.AddRange(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.Remove(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressType)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection.#ctor(blog.dachs.ServerManager.Configuration)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "namespace", Target = "~N:blog.dachs.ServerManager.DynDNS")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.NewIpAddressCollection~blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.SetDnsServer")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~P:blog.dachs.ServerManager.DynDNS.DynDnsService.IpAddressCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsServer.SetDnsServer")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsServer.GetPublicIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.GetDnsIpAddress(System.String)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.GetPrivateIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.GetIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsDomain.GetIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsServerRemote.GetIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsServiceRemote.GetIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServiceRemote")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServiceLocal")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsServer.GetIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServerRemote")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServer")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServerLocal")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.GetPublicIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.UpdatePublicDnsIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.UpdatePublicDnsIpAddress(System.String,System.Net.NetworkCredential,blog.dachs.ServerManager.DynDNS.DynDnsIpAddressVersion)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsDomain.UpdatePublicDnsIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsFirewallRuleCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsFirewallRule.#ctor(blog.dachs.ServerManager.Configuration,System.Int32)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsFirewallRule.#ctor(blog.dachs.ServerManager.Configuration)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.GlobalEncryptionAes")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.NewIpAddress~blog.dachs.ServerManager.DynDNS.DynDnsIpAddress")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.DynDnsService.GetDnsIpAddress(blog.dachs.ServerManager.DynDNS.DynDnsIpAddressCollection,blog.dachs.ServerManager.DynDNS.DynDnsIpAddressObject)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~M:blog.dachs.ServerManager.DynDNS.ThreadDynDns.#ctor(blog.dachs.ServerManager.Configuration)")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "member", Target = "~P:blog.dachs.ServerManager.DynDNS.ThreadDynDns.DynDnsServer")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.ThreadDynDns")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServiceCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsServiceType")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsService")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsFirewallRuleName")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsFirewallRule")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsDomainCollection")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.DynDNS.DynDnsDomain")]
[assembly: SuppressMessage("Naming", "VSSpell001:Spell Check", Justification = "<Ausstehend>", Scope = "type", Target = "~T:blog.dachs.ServerManager.KeePassDatabase")]
